{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/Gamal-Abdal-Nasser/Core-Analytics_DEPI_Final_Project/blob/main/Python%20Notebook%20For%20Cleaning%20and%20Viz\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "LSc129OBr1em"
      },
      "outputs": [],
      "source": [
        "import pandas as pd\n",
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sns\n",
        "\n",
        "\n",
        "# Load the dataset\n",
        "\n",
        "df=pd.read_csv('Power query cleaned.csv')"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.info()\n",
        "df.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "collapsed": true,
        "id": "S0v-oh2dtRz8",
        "outputId": "4ebb4170-05f6-47be-d6b6-463b3e5e0abb"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 31653 entries, 0 to 31652\n",
            "Data columns (total 19 columns):\n",
            " #   Column               Non-Null Count  Dtype \n",
            "---  ------               --------------  ----- \n",
            " 0   Transaction ID       31653 non-null  object\n",
            " 1   Date of Purchase     31653 non-null  object\n",
            " 2   Time of Purchase     31653 non-null  object\n",
            " 3   Purchase Type        31653 non-null  object\n",
            " 4   Payment Method       31653 non-null  object\n",
            " 5   Railcard             10735 non-null  object\n",
            " 6   Ticket Class         31653 non-null  object\n",
            " 7   Ticket Type          31653 non-null  object\n",
            " 8   Price                31653 non-null  int64 \n",
            " 9   Departure Station    31653 non-null  object\n",
            " 10  Arrival Destination  31653 non-null  object\n",
            " 11  Date of Journey      31653 non-null  object\n",
            " 12  Departure Time       31653 non-null  object\n",
            " 13  Arrival Time         31653 non-null  object\n",
            " 14  Actual Arrival Time  29773 non-null  object\n",
            " 15  Journey Status       31653 non-null  object\n",
            " 16  Reason for Delay     31653 non-null  object\n",
            " 17  Refund Request       31653 non-null  object\n",
            " 18  Stations Name        31653 non-null  object\n",
            "dtypes: int64(1), object(18)\n",
            "memory usage: 4.6+ MB\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "            Transaction ID Date of Purchase Time of Purchase Purchase Type  \\\n",
              "0  da8a6ba8-b3dc-4677-b176        12/8/2023      12:41:11 PM        Online   \n",
              "1  b0cdd1b0-f214-4197-be53       12/16/2023      11:23:01 AM       Station   \n",
              "2  f3ba7a96-f713-40d9-9629       12/19/2023       7:51:27 PM        Online   \n",
              "3  b2471f11-4fe7-4c87-8ab4       12/20/2023      11:00:36 PM       Station   \n",
              "4  2be00b45-0762-485e-a7a3       12/27/2023       6:22:56 PM        Online   \n",
              "\n",
              "  Payment Method Railcard Ticket Class Ticket Type  Price  \\\n",
              "0    Contactless    Adult     Standard     Advance     43   \n",
              "1    Credit Card    Adult     Standard     Advance     23   \n",
              "2    Credit Card      NaN     Standard     Advance      3   \n",
              "3    Credit Card      NaN     Standard     Advance     13   \n",
              "4    Contactless      NaN     Standard     Advance     76   \n",
              "\n",
              "       Departure Station    Arrival Destination Date of Journey  \\\n",
              "0      London Paddington  Liverpool Lime Street        1/1/2024   \n",
              "1     London Kings Cross                   York        1/1/2024   \n",
              "2  Liverpool Lime Street  Manchester Piccadilly        1/2/2024   \n",
              "3      London Paddington                Reading        1/1/2024   \n",
              "4  Liverpool Lime Street          London Euston        1/1/2024   \n",
              "\n",
              "  Departure Time Arrival Time Actual Arrival Time Journey Status  \\\n",
              "0    11:00:00 AM   1:30:00 PM          1:30:00 PM        On Time   \n",
              "1     9:45:00 AM  11:35:00 AM         11:40:00 AM        Delayed   \n",
              "2     6:15:00 PM   6:45:00 PM          6:45:00 PM        On Time   \n",
              "3     9:30:00 PM  10:30:00 PM         10:30:00 PM        On Time   \n",
              "4     4:45:00 PM   7:00:00 PM          7:00:00 PM        On Time   \n",
              "\n",
              "  Reason for Delay Refund Request          Stations Name  \n",
              "0         No Delay             No      London Paddington  \n",
              "1   Signal Failure             No     London Kings Cross  \n",
              "2         No Delay             No  Liverpool Lime Street  \n",
              "3         No Delay             No      London Paddington  \n",
              "4         No Delay             No  Liverpool Lime Street  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-61e53d2e-9b83-48bf-b48b-f0a9738f8c50\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Transaction ID</th>\n",
              "      <th>Date of Purchase</th>\n",
              "      <th>Time of Purchase</th>\n",
              "      <th>Purchase Type</th>\n",
              "      <th>Payment Method</th>\n",
              "      <th>Railcard</th>\n",
              "      <th>Ticket Class</th>\n",
              "      <th>Ticket Type</th>\n",
              "      <th>Price</th>\n",
              "      <th>Departure Station</th>\n",
              "      <th>Arrival Destination</th>\n",
              "      <th>Date of Journey</th>\n",
              "      <th>Departure Time</th>\n",
              "      <th>Arrival Time</th>\n",
              "      <th>Actual Arrival Time</th>\n",
              "      <th>Journey Status</th>\n",
              "      <th>Reason for Delay</th>\n",
              "      <th>Refund Request</th>\n",
              "      <th>Stations Name</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>da8a6ba8-b3dc-4677-b176</td>\n",
              "      <td>12/8/2023</td>\n",
              "      <td>12:41:11 PM</td>\n",
              "      <td>Online</td>\n",
              "      <td>Contactless</td>\n",
              "      <td>Adult</td>\n",
              "      <td>Standard</td>\n",
              "      <td>Advance</td>\n",
              "      <td>43</td>\n",
              "      <td>London Paddington</td>\n",
              "      <td>Liverpool Lime Street</td>\n",
              "      <td>1/1/2024</td>\n",
              "      <td>11:00:00 AM</td>\n",
              "      <td>1:30:00 PM</td>\n",
              "      <td>1:30:00 PM</td>\n",
              "      <td>On Time</td>\n",
              "      <td>No Delay</td>\n",
              "      <td>No</td>\n",
              "      <td>London Paddington</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>b0cdd1b0-f214-4197-be53</td>\n",
              "      <td>12/16/2023</td>\n",
              "      <td>11:23:01 AM</td>\n",
              "      <td>Station</td>\n",
              "      <td>Credit Card</td>\n",
              "      <td>Adult</td>\n",
              "      <td>Standard</td>\n",
              "      <td>Advance</td>\n",
              "      <td>23</td>\n",
              "      <td>London Kings Cross</td>\n",
              "      <td>York</td>\n",
              "      <td>1/1/2024</td>\n",
              "      <td>9:45:00 AM</td>\n",
              "      <td>11:35:00 AM</td>\n",
              "      <td>11:40:00 AM</td>\n",
              "      <td>Delayed</td>\n",
              "      <td>Signal Failure</td>\n",
              "      <td>No</td>\n",
              "      <td>London Kings Cross</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>f3ba7a96-f713-40d9-9629</td>\n",
              "      <td>12/19/2023</td>\n",
              "      <td>7:51:27 PM</td>\n",
              "      <td>Online</td>\n",
              "      <td>Credit Card</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Standard</td>\n",
              "      <td>Advance</td>\n",
              "      <td>3</td>\n",
              "      <td>Liverpool Lime Street</td>\n",
              "      <td>Manchester Piccadilly</td>\n",
              "      <td>1/2/2024</td>\n",
              "      <td>6:15:00 PM</td>\n",
              "      <td>6:45:00 PM</td>\n",
              "      <td>6:45:00 PM</td>\n",
              "      <td>On Time</td>\n",
              "      <td>No Delay</td>\n",
              "      <td>No</td>\n",
              "      <td>Liverpool Lime Street</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>b2471f11-4fe7-4c87-8ab4</td>\n",
              "      <td>12/20/2023</td>\n",
              "      <td>11:00:36 PM</td>\n",
              "      <td>Station</td>\n",
              "      <td>Credit Card</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Standard</td>\n",
              "      <td>Advance</td>\n",
              "      <td>13</td>\n",
              "      <td>London Paddington</td>\n",
              "      <td>Reading</td>\n",
              "      <td>1/1/2024</td>\n",
              "      <td>9:30:00 PM</td>\n",
              "      <td>10:30:00 PM</td>\n",
              "      <td>10:30:00 PM</td>\n",
              "      <td>On Time</td>\n",
              "      <td>No Delay</td>\n",
              "      <td>No</td>\n",
              "      <td>London Paddington</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>2be00b45-0762-485e-a7a3</td>\n",
              "      <td>12/27/2023</td>\n",
              "      <td>6:22:56 PM</td>\n",
              "      <td>Online</td>\n",
              "      <td>Contactless</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Standard</td>\n",
              "      <td>Advance</td>\n",
              "      <td>76</td>\n",
              "      <td>Liverpool Lime Street</td>\n",
              "      <td>London Euston</td>\n",
              "      <td>1/1/2024</td>\n",
              "      <td>4:45:00 PM</td>\n",
              "      <td>7:00:00 PM</td>\n",
              "      <td>7:00:00 PM</td>\n",
              "      <td>On Time</td>\n",
              "      <td>No Delay</td>\n",
              "      <td>No</td>\n",
              "      <td>Liverpool Lime Street</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-61e53d2e-9b83-48bf-b48b-f0a9738f8c50')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-61e53d2e-9b83-48bf-b48b-f0a9738f8c50 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-61e53d2e-9b83-48bf-b48b-f0a9738f8c50');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-263a9f55-7ebf-430e-beb0-ee4cffca41cf\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-263a9f55-7ebf-430e-beb0-ee4cffca41cf')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-263a9f55-7ebf-430e-beb0-ee4cffca41cf button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "df",
              "summary": "{\n  \"name\": \"df\",\n  \"rows\": 31653,\n  \"fields\": [\n    {\n      \"column\": \"Transaction ID\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 31653,\n        \"samples\": [\n          \"5cba8154-329e-4670-805b\",\n          \"cc742a5e-bce6-440e-96f1\",\n          \"2c1cd8e6-031d-498a-9acd\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Date of Purchase\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"num_unique_values\": 128,\n        \"samples\": [\n          \"2/18/2024\",\n          \"2/3/2024\",\n          \"1/13/2024\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Time of Purchase\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"num_unique_values\": 24351,\n        \"samples\": [\n          \"9:39:16 AM\",\n          \"7:46:14 AM\",\n          \"12:46:48 PM\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Purchase Type\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Station\",\n          \"Online\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Payment Method\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Contactless\",\n          \"Credit Card\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Railcard\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Adult\",\n          \"Disabled\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Ticket Class\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"First Class\",\n          \"Standard\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Ticket Type\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Advance\",\n          \"Off-Peak\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Price\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 29,\n        \"min\": 1,\n        \"max\": 267,\n        \"num_unique_values\": 125,\n        \"samples\": [\n          33,\n          22\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Departure Station\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 12,\n        \"samples\": [\n          \"Edinburgh Waverley\",\n          \"Reading\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Arrival Destination\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 32,\n        \"samples\": [\n          \"Wakefield\",\n          \"Leeds\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Date of Journey\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"num_unique_values\": 121,\n        \"samples\": [\n          \"1/29/2024\",\n          \"2/18/2024\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Departure Time\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"num_unique_values\": 96,\n        \"samples\": [\n          \"10:15:00 AM\",\n          \"4:45:00 AM\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Arrival Time\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"num_unique_values\": 203,\n        \"samples\": [\n          \"8:45:00 AM\",\n          \"2:30:00 AM\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Actual Arrival Time\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"num_unique_values\": 623,\n        \"samples\": [\n          \"12:32:00 PM\",\n          \"11:43:00 AM\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Journey Status\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"On Time\",\n          \"Delayed\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Reason for Delay\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 7,\n        \"samples\": [\n          \"No Delay\",\n          \"Signal Failure\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Refund Request\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Yes\",\n          \"No\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Stations Name\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 12,\n        \"samples\": [\n          \"Edinburgh Waverley\",\n          \"Reading\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 5
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# **1-Reasons Of Delay**"
      ],
      "metadata": {
        "id": "YPEtMls-1CXb"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Filter only the delayed journeys\n",
        "delays_df = df[df['Journey Status'] == 'Delayed']\n",
        "\n",
        "# Preview the relevant columns\n",
        "delays_df[['Departure Station', 'Arrival Destination', 'Reason for Delay']].head()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "collapsed": true,
        "id": "ctN4FmCWxmbb",
        "outputId": "b4855a05-0a0a-480a-9cd2-5c20bb540065"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        Departure Station    Arrival Destination    Reason for Delay\n",
              "1      London Kings Cross                   York      Signal Failure\n",
              "8           London Euston                   York      Signal Failure\n",
              "20  Birmingham New Street  Manchester Piccadilly     Technical Issue\n",
              "26                 Oxford   Bristol Temple Meads      Signal Failure\n",
              "45  Manchester Piccadilly          London Euston  Weather Conditions"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-11dacfc3-0045-4142-bdc0-ce53cde8fc73\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Departure Station</th>\n",
              "      <th>Arrival Destination</th>\n",
              "      <th>Reason for Delay</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>London Kings Cross</td>\n",
              "      <td>York</td>\n",
              "      <td>Signal Failure</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>London Euston</td>\n",
              "      <td>York</td>\n",
              "      <td>Signal Failure</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>20</th>\n",
              "      <td>Birmingham New Street</td>\n",
              "      <td>Manchester Piccadilly</td>\n",
              "      <td>Technical Issue</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>26</th>\n",
              "      <td>Oxford</td>\n",
              "      <td>Bristol Temple Meads</td>\n",
              "      <td>Signal Failure</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>45</th>\n",
              "      <td>Manchester Piccadilly</td>\n",
              "      <td>London Euston</td>\n",
              "      <td>Weather Conditions</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-11dacfc3-0045-4142-bdc0-ce53cde8fc73')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-11dacfc3-0045-4142-bdc0-ce53cde8fc73 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-11dacfc3-0045-4142-bdc0-ce53cde8fc73');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-d65799b5-384c-4a85-bc90-c896d845675c\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d65799b5-384c-4a85-bc90-c896d845675c')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-d65799b5-384c-4a85-bc90-c896d845675c button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "summary": "{\n  \"name\": \"delays_df[['Departure Station', 'Arrival Destination', 'Reason for Delay']]\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"Departure Station\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"London Euston\",\n          \"Manchester Piccadilly\",\n          \"Birmingham New Street\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Arrival Destination\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"Manchester Piccadilly\",\n          \"London Euston\",\n          \"York\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Reason for Delay\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Signal Failure\",\n          \"Technical Issue\",\n          \"Weather Conditions\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 6
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Count the number of delays per reason\n",
        "delay_reasons = delays_df['Reason for Delay'].value_counts().reset_index()\n",
        "delay_reasons.columns = ['Reason for Delay', 'Count']\n",
        "delay_reasons"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "collapsed": true,
        "id": "o-3C6T6BykFS",
        "outputId": "a318a6eb-c191-4945-d6d5-bcd42ff9f681"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "     Reason for Delay  Count\n",
              "0  Weather Conditions    927\n",
              "1     Technical Issue    472\n",
              "2      Signal Failure    451\n",
              "3      Staff Shortage    183\n",
              "4            Staffing    172\n",
              "5             Traffic     87"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-0b01e0ce-6637-42b5-ad4a-da3041d89607\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Reason for Delay</th>\n",
              "      <th>Count</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Weather Conditions</td>\n",
              "      <td>927</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Technical Issue</td>\n",
              "      <td>472</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Signal Failure</td>\n",
              "      <td>451</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Staff Shortage</td>\n",
              "      <td>183</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Staffing</td>\n",
              "      <td>172</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>Traffic</td>\n",
              "      <td>87</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0b01e0ce-6637-42b5-ad4a-da3041d89607')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-0b01e0ce-6637-42b5-ad4a-da3041d89607 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-0b01e0ce-6637-42b5-ad4a-da3041d89607');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-368867ee-28e7-496b-bc24-7e6639e2493b\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-368867ee-28e7-496b-bc24-7e6639e2493b')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-368867ee-28e7-496b-bc24-7e6639e2493b button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "  <div id=\"id_a742c068-4477-4e89-8d6d-a9ce15dd1f39\">\n",
              "    <style>\n",
              "      .colab-df-generate {\n",
              "        background-color: #E8F0FE;\n",
              "        border: none;\n",
              "        border-radius: 50%;\n",
              "        cursor: pointer;\n",
              "        display: none;\n",
              "        fill: #1967D2;\n",
              "        height: 32px;\n",
              "        padding: 0 0 0 0;\n",
              "        width: 32px;\n",
              "      }\n",
              "\n",
              "      .colab-df-generate:hover {\n",
              "        background-color: #E2EBFA;\n",
              "        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "        fill: #174EA6;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate {\n",
              "        background-color: #3B4455;\n",
              "        fill: #D2E3FC;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate:hover {\n",
              "        background-color: #434B5C;\n",
              "        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "        fill: #FFFFFF;\n",
              "      }\n",
              "    </style>\n",
              "    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('delay_reasons')\"\n",
              "            title=\"Generate code using this dataframe.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "    <script>\n",
              "      (() => {\n",
              "      const buttonEl =\n",
              "        document.querySelector('#id_a742c068-4477-4e89-8d6d-a9ce15dd1f39 button.colab-df-generate');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      buttonEl.onclick = () => {\n",
              "        google.colab.notebook.generateWithVariable('delay_reasons');\n",
              "      }\n",
              "      })();\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "delay_reasons",
              "summary": "{\n  \"name\": \"delay_reasons\",\n  \"rows\": 6,\n  \"fields\": [\n    {\n      \"column\": \"Reason for Delay\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 6,\n        \"samples\": [\n          \"Weather Conditions\",\n          \"Technical Issue\",\n          \"Traffic\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Count\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 310,\n        \"min\": 87,\n        \"max\": 927,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          927,\n          472,\n          87\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 7
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Set figure size\n",
        "plt.figure(figsize=(10, 6))\n",
        "\n",
        "# Create the horizontal bar plot\n",
        "sns.barplot(data=delay_reasons, y='Reason for Delay', x='Count', palette='magma')\n",
        "\n",
        "# Add titles and labels\n",
        "plt.title('Primary Causes of Train Delays')\n",
        "plt.xlabel('Number of Delays')\n",
        "plt.ylabel('Reason for Delay')\n",
        "plt.tight_layout()\n",
        "\n",
        "for index, value in enumerate(delay_reasons['Count']):\n",
        "    plt.text(value + 2, index, str(value), va='center')\n",
        "# Show the plot\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "collapsed": true,
        "id": "XUJPlpLly1DX",
        "outputId": "e8e7874a-003c-47ae-8fa9-86e9369bf3bb"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-9-8e27cd974b79>:5: FutureWarning: \n",
            "\n",
            "Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `y` variable to `hue` and set `legend=False` for the same effect.\n",
            "\n",
            "  sns.barplot(data=delay_reasons, y='Reason for Delay', x='Count', palette='magma')\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# 2-**Average time and cost**"
      ],
      "metadata": {
        "id": "71Ir98UNDfCu"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Convert Departure and Arrival Time columns to datetime format\n",
        "df['Departure Time'] = pd.to_datetime(df['Departure Time'], format='%I:%M:%S %p')\n",
        "df['Arrival Time'] = pd.to_datetime(df['Arrival Time'], format='%I:%M:%S %p')"
      ],
      "metadata": {
        "id": "VvNQ_SPeC_CC"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Calculate travel time in hours\n",
        "df['Travel Time (Hours)'] = (df['Arrival Time'] - df['Departure Time']).dt.total_seconds() / 3600\n",
        "\n",
        "# Adjust for overnight trips (where arrival is on the next day)\n",
        "df.loc[df['Travel Time (Hours)'] < 0, 'Travel Time (Hours)'] += 24\n",
        "df['Travel Time (Hours)']"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 458
        },
        "collapsed": true,
        "id": "c9y8_clXDAFq",
        "outputId": "4fed9b62-7e3f-42bd-bb8b-ac146603a4d2"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0        2.500000\n",
              "1        1.833333\n",
              "2        0.500000\n",
              "3        1.000000\n",
              "4        2.250000\n",
              "           ...   \n",
              "31648    0.500000\n",
              "31649    1.333333\n",
              "31650    0.500000\n",
              "31651    1.333333\n",
              "31652    0.500000\n",
              "Name: Travel Time (Hours), Length: 31653, dtype: float64"
            ],
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Travel Time (Hours)</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2.500000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1.833333</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>0.500000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>2.250000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>31648</th>\n",
              "      <td>0.500000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>31649</th>\n",
              "      <td>1.333333</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>31650</th>\n",
              "      <td>0.500000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>31651</th>\n",
              "      <td>1.333333</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>31652</th>\n",
              "      <td>0.500000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>31653 rows × 1 columns</p>\n",
              "</div><br><label><b>dtype:</b> float64</label>"
            ]
          },
          "metadata": {},
          "execution_count": 44
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Group by Departure Station to get average ticket price and travel time\n",
        "avg_stats = df.groupby('Departure Station').agg({\n",
        "    'Price': 'mean',\n",
        "    'Travel Time (Hours)': 'mean'\n",
        "}).reset_index()\n",
        "avg_stats"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 425
        },
        "collapsed": true,
        "id": "mkuRrV2PDOSG",
        "outputId": "a8202a7b-ba7d-435d-99ae-82b572ad98f3"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        Departure Station      Price  Travel Time (Hours)\n",
              "0   Birmingham New Street  17.844569             1.061291\n",
              "1    Bristol Temple Meads   6.125000             0.416667\n",
              "2      Edinburgh Waverley  41.039216             4.333333\n",
              "3   Liverpool Lime Street  29.658847             0.990591\n",
              "4           London Euston  22.617077             1.406372\n",
              "5      London Kings Cross  47.209742             1.943880\n",
              "6       London Paddington  18.631556             1.084444\n",
              "7       London St Pancras  16.180159             1.308019\n",
              "8   Manchester Piccadilly  13.329912             0.665973\n",
              "9                  Oxford  19.854167             1.250000\n",
              "10                Reading  17.048822             0.618687\n",
              "11                   York  21.085221             1.140417"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-4536af74-6635-49b0-b6ec-d698e6c594aa\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Departure Station</th>\n",
              "      <th>Price</th>\n",
              "      <th>Travel Time (Hours)</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Birmingham New Street</td>\n",
              "      <td>17.844569</td>\n",
              "      <td>1.061291</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Bristol Temple Meads</td>\n",
              "      <td>6.125000</td>\n",
              "      <td>0.416667</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Edinburgh Waverley</td>\n",
              "      <td>41.039216</td>\n",
              "      <td>4.333333</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Liverpool Lime Street</td>\n",
              "      <td>29.658847</td>\n",
              "      <td>0.990591</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>London Euston</td>\n",
              "      <td>22.617077</td>\n",
              "      <td>1.406372</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>London Kings Cross</td>\n",
              "      <td>47.209742</td>\n",
              "      <td>1.943880</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>London Paddington</td>\n",
              "      <td>18.631556</td>\n",
              "      <td>1.084444</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>London St Pancras</td>\n",
              "      <td>16.180159</td>\n",
              "      <td>1.308019</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>Manchester Piccadilly</td>\n",
              "      <td>13.329912</td>\n",
              "      <td>0.665973</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>Oxford</td>\n",
              "      <td>19.854167</td>\n",
              "      <td>1.250000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>Reading</td>\n",
              "      <td>17.048822</td>\n",
              "      <td>0.618687</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>York</td>\n",
              "      <td>21.085221</td>\n",
              "      <td>1.140417</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4536af74-6635-49b0-b6ec-d698e6c594aa')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-4536af74-6635-49b0-b6ec-d698e6c594aa button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-4536af74-6635-49b0-b6ec-d698e6c594aa');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-a5daad54-211a-4303-8567-7f213c7b5db7\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-a5daad54-211a-4303-8567-7f213c7b5db7')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-a5daad54-211a-4303-8567-7f213c7b5db7 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "  <div id=\"id_1bfb507e-78c7-43ff-9a3c-b0821685bacf\">\n",
              "    <style>\n",
              "      .colab-df-generate {\n",
              "        background-color: #E8F0FE;\n",
              "        border: none;\n",
              "        border-radius: 50%;\n",
              "        cursor: pointer;\n",
              "        display: none;\n",
              "        fill: #1967D2;\n",
              "        height: 32px;\n",
              "        padding: 0 0 0 0;\n",
              "        width: 32px;\n",
              "      }\n",
              "\n",
              "      .colab-df-generate:hover {\n",
              "        background-color: #E2EBFA;\n",
              "        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "        fill: #174EA6;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate {\n",
              "        background-color: #3B4455;\n",
              "        fill: #D2E3FC;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate:hover {\n",
              "        background-color: #434B5C;\n",
              "        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "        fill: #FFFFFF;\n",
              "      }\n",
              "    </style>\n",
              "    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('avg_stats')\"\n",
              "            title=\"Generate code using this dataframe.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "    <script>\n",
              "      (() => {\n",
              "      const buttonEl =\n",
              "        document.querySelector('#id_1bfb507e-78c7-43ff-9a3c-b0821685bacf button.colab-df-generate');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      buttonEl.onclick = () => {\n",
              "        google.colab.notebook.generateWithVariable('avg_stats');\n",
              "      }\n",
              "      })();\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "avg_stats",
              "summary": "{\n  \"name\": \"avg_stats\",\n  \"rows\": 12,\n  \"fields\": [\n    {\n      \"column\": \"Departure Station\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 12,\n        \"samples\": [\n          \"Reading\",\n          \"Oxford\",\n          \"Birmingham New Street\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Price\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 11.572031360002027,\n        \"min\": 6.125,\n        \"max\": 47.20974225585245,\n        \"num_unique_values\": 12,\n        \"samples\": [\n          17.04882154882155,\n          19.854166666666668,\n          17.844569288389515\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Travel Time (Hours)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.0210811595727853,\n        \"min\": 0.4166666666666667,\n        \"max\": 4.333333333333333,\n        \"num_unique_values\": 12,\n        \"samples\": [\n          0.6186868686868687,\n          1.25,\n          1.0612905742821472\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 45
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Start plotting\n",
        "fig, ax1 = plt.subplots(figsize=(14, 6))\n",
        "\n",
        "# Bar chart: Average ticket price\n",
        "color = 'tab:blue'\n",
        "ax1.set_xlabel('Departure Station')\n",
        "ax1.set_ylabel('Average Ticket Price', color=color)\n",
        "ax1.bar(avg_stats['Departure Station'], avg_stats['Price'], color=color, alpha=0.6)\n",
        "ax1.tick_params(axis='y', labelcolor=color)\n",
        "plt.xticks(rotation=45)\n",
        "\n",
        "# Line chart: Average travel time\n",
        "ax2 = ax1.twinx()\n",
        "color = 'tab:red'\n",
        "ax2.set_ylabel('Average Travel Time (Hours)', color=color)\n",
        "ax2.plot(avg_stats['Departure Station'], avg_stats['Travel Time (Hours)'], color=color, marker='o')\n",
        "ax2.tick_params(axis='y', labelcolor=color)\n",
        "\n",
        "plt.title('Average Travel Time and Ticket Price by Departure Station')\n",
        "fig.tight_layout()\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 607
        },
        "collapsed": true,
        "id": "DAV8_IPuDP9z",
        "outputId": "8ac774bf-737e-4fdd-c379-f53972383b4c"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1400x600 with 2 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# **3-Ticket Type**"
      ],
      "metadata": {
        "id": "OYnIwQUeDoEQ"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Count number of passengers (or rows) per ticket type\n",
        "ticket_counts = df['Ticket Type'].value_counts()\n",
        "ticket_counts"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 209
        },
        "collapsed": true,
        "id": "4Xu2GQ-5DrWF",
        "outputId": "38edfc47-3a54-420b-c74c-3d97cd28be77"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Ticket Type\n",
              "Advance     17561\n",
              "Off-Peak     8752\n",
              "Anytime      5340\n",
              "Name: count, dtype: int64"
            ],
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>count</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Ticket Type</th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>Advance</th>\n",
              "      <td>17561</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Off-Peak</th>\n",
              "      <td>8752</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Anytime</th>\n",
              "      <td>5340</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div><br><label><b>dtype:</b> int64</label>"
            ]
          },
          "metadata": {},
          "execution_count": 47
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "plt.figure(figsize=(7, 7))\n",
        "plt.pie(ticket_counts, labels=ticket_counts.index, autopct='%1.1f%%', startangle=90)\n",
        "plt.title('Distribution of Passengers by Ticket Type')\n",
        "plt.axis('equal')  # Equal aspect ratio ensures the pie is drawn as a circle.\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 598
        },
        "collapsed": true,
        "id": "_2dCu9g5Dy3i",
        "outputId": "2e760e46-429a-495f-880c-141c6e72d0de"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 700x700 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [],
      "metadata": {
        "id": "dNIAdEZUC-jE"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "# **4-Top 5 Busiest routes**"
      ],
      "metadata": {
        "id": "uK3qaiIK1pPq"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Create a new column that represents each route\n",
        "df['Route'] = df['Departure Station'] + \" → \" + df['Arrival Destination']\n",
        "df['Route']"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "collapsed": true,
        "id": "oVYsSQGP1vSb",
        "outputId": "d980bdd1-429c-47f7-eb12-ddd92c5d9f0e"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0            London Paddington → Liverpool Lime Street\n",
              "1                            London Kings Cross → York\n",
              "2        Liverpool Lime Street → Manchester Piccadilly\n",
              "3                          London Paddington → Reading\n",
              "4                Liverpool Lime Street → London Euston\n",
              "                             ...                      \n",
              "31648    Manchester Piccadilly → Liverpool Lime Street\n",
              "31649            London Euston → Birmingham New Street\n",
              "31650    Manchester Piccadilly → Liverpool Lime Street\n",
              "31651            London Euston → Birmingham New Street\n",
              "31652    Liverpool Lime Street → Manchester Piccadilly\n",
              "Name: Route, Length: 31653, dtype: object"
            ],
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Route</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>London Paddington → Liverpool Lime Street</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>London Kings Cross → York</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Liverpool Lime Street → Manchester Piccadilly</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>London Paddington → Reading</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Liverpool Lime Street → London Euston</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>31648</th>\n",
              "      <td>Manchester Piccadilly → Liverpool Lime Street</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>31649</th>\n",
              "      <td>London Euston → Birmingham New Street</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>31650</th>\n",
              "      <td>Manchester Piccadilly → Liverpool Lime Street</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>31651</th>\n",
              "      <td>London Euston → Birmingham New Street</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>31652</th>\n",
              "      <td>Liverpool Lime Street → Manchester Piccadilly</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>31653 rows × 1 columns</p>\n",
              "</div><br><label><b>dtype:</b> object</label>"
            ]
          },
          "metadata": {},
          "execution_count": 11
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Count how many times each route appears\n",
        "route_counts = df['Route'].value_counts().reset_index()\n",
        "route_counts.columns = ['Route', 'Number of Journeys']\n",
        "\n",
        "# Get the top 5 busiest routes\n",
        "top_5_routes = route_counts.head(5)\n",
        "top_5_routes"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "collapsed": true,
        "id": "I6GJM5rl2CMP",
        "outputId": "968a8310-2628-43ab-c874-a3a70909e05c"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                                           Route  Number of Journeys\n",
              "0  Manchester Piccadilly → Liverpool Lime Street                4628\n",
              "1          London Euston → Birmingham New Street                4209\n",
              "2                      London Kings Cross → York                3922\n",
              "3                    London Paddington → Reading                3873\n",
              "4      London St Pancras → Birmingham New Street                3471"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-74621582-8f25-4361-a35d-14572db8c0e6\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Route</th>\n",
              "      <th>Number of Journeys</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Manchester Piccadilly → Liverpool Lime Street</td>\n",
              "      <td>4628</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>London Euston → Birmingham New Street</td>\n",
              "      <td>4209</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>London Kings Cross → York</td>\n",
              "      <td>3922</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>London Paddington → Reading</td>\n",
              "      <td>3873</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>London St Pancras → Birmingham New Street</td>\n",
              "      <td>3471</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-74621582-8f25-4361-a35d-14572db8c0e6')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-74621582-8f25-4361-a35d-14572db8c0e6 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-74621582-8f25-4361-a35d-14572db8c0e6');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-daf8de57-02a7-498f-bc4f-181c5b38dc3e\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-daf8de57-02a7-498f-bc4f-181c5b38dc3e')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-daf8de57-02a7-498f-bc4f-181c5b38dc3e button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "  <div id=\"id_2c1dd737-0439-4d88-8830-68ebf1d2753d\">\n",
              "    <style>\n",
              "      .colab-df-generate {\n",
              "        background-color: #E8F0FE;\n",
              "        border: none;\n",
              "        border-radius: 50%;\n",
              "        cursor: pointer;\n",
              "        display: none;\n",
              "        fill: #1967D2;\n",
              "        height: 32px;\n",
              "        padding: 0 0 0 0;\n",
              "        width: 32px;\n",
              "      }\n",
              "\n",
              "      .colab-df-generate:hover {\n",
              "        background-color: #E2EBFA;\n",
              "        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "        fill: #174EA6;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate {\n",
              "        background-color: #3B4455;\n",
              "        fill: #D2E3FC;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate:hover {\n",
              "        background-color: #434B5C;\n",
              "        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "        fill: #FFFFFF;\n",
              "      }\n",
              "    </style>\n",
              "    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('top_5_routes')\"\n",
              "            title=\"Generate code using this dataframe.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "    <script>\n",
              "      (() => {\n",
              "      const buttonEl =\n",
              "        document.querySelector('#id_2c1dd737-0439-4d88-8830-68ebf1d2753d button.colab-df-generate');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      buttonEl.onclick = () => {\n",
              "        google.colab.notebook.generateWithVariable('top_5_routes');\n",
              "      }\n",
              "      })();\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "top_5_routes",
              "summary": "{\n  \"name\": \"top_5_routes\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"Route\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"London Euston \\u2192 Birmingham New Street\",\n          \"London St Pancras \\u2192 Birmingham New Street\",\n          \"London Kings Cross \\u2192 York\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Number of Journeys\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 429,\n        \"min\": 3471,\n        \"max\": 4628,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          4209,\n          3471,\n          3922\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 12
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "plt.figure(figsize=(10, 6))\n",
        "lineplot = sns.lineplot(data=top_5_routes, y='Route', x='Number of Journeys', palette='viridis')\n",
        "\n",
        "# Add number labels on each bar\n",
        "for index, value in enumerate(top_5_routes['Number of Journeys']):\n",
        "    plt.text(value + 2, index, str(value), va='center')\n",
        "\n",
        "plt.title('Top 5 Busiest Train Routes by Journey Volume')\n",
        "plt.xlabel('Number of Journeys')\n",
        "plt.ylabel('Route')\n",
        "plt.tight_layout()\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 644
        },
        "collapsed": true,
        "id": "rI5FE3Fq2UQM",
        "outputId": "ef1d782b-aead-4483-bc76-b4c8feb08a70"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-51-5fece1bf7b6d>:2: UserWarning: Ignoring `palette` because no `hue` variable has been assigned.\n",
            "  lineplot = sns.lineplot(data=top_5_routes, y='Route', x='Number of Journeys', palette='viridis')\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# **5-Payment methods**"
      ],
      "metadata": {
        "id": "oZq4g-fx8wcG"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "payment_counts = df['Payment Method'].value_counts()\n",
        "payment_counts"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "collapsed": true,
        "id": "BD6l6CikEB6v",
        "outputId": "ed6dc0d9-fb07-49c9-a79b-0d505374a7f5"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Payment Method\n",
              "Credit Card    19136\n",
              "Contactless    10834\n",
              "Debit Card      1683\n",
              "Name: count, dtype: int64"
            ],
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>count</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Payment Method</th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>Credit Card</th>\n",
              "      <td>19136</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Contactless</th>\n",
              "      <td>10834</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Debit Card</th>\n",
              "      <td>1683</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div><br><label><b>dtype:</b> int64</label>"
            ]
          },
          "metadata": {},
          "execution_count": 39
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "plt.figure(figsize=(7, 7))\n",
        "colors = ['grey', 'lightblue', 'darkgrey']\n",
        "plt.pie(payment_counts, labels=payment_counts.index, autopct='%1.1f%%', startangle=140 , colors=colors)\n",
        "plt.title('Most Frequently Used Payment Methods by Passengers')\n",
        "plt.axis('equal')  # Makes sure the pie is a circle\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 598
        },
        "id": "5pkl4kqi80wh",
        "outputId": "0a34a1f8-67a1-458d-a049-d032c8187901"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 700x700 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# **6-Refund Request By ticket category**"
      ],
      "metadata": {
        "id": "82sOJoux-R4Y"
      }
    },
    {
      "cell_type": "markdown",
      "source": [],
      "metadata": {
        "id": "d9UUaa9K7TAV"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#Filter only the rows where refund was requested\n",
        "refunds = df[df['Refund Request'] == 'Yes'][['Ticket Class', 'Purchase Type', 'Ticket Type']]\n",
        "refunds"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "id": "wtSdNrgp-YMT",
        "outputId": "6566f801-f8a4-4eb4-883b-9bfc9e2222d7"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      Ticket Class Purchase Type Ticket Type\n",
              "20        Standard       Station     Advance\n",
              "26     First Class        Online     Advance\n",
              "91        Standard        Online    Off-Peak\n",
              "111       Standard       Station    Off-Peak\n",
              "178       Standard        Online     Advance\n",
              "...            ...           ...         ...\n",
              "31599     Standard       Station    Off-Peak\n",
              "31604     Standard       Station    Off-Peak\n",
              "31618     Standard       Station     Anytime\n",
              "31637     Standard       Station     Anytime\n",
              "31641     Standard       Station     Anytime\n",
              "\n",
              "[1118 rows x 3 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-d79eed19-b35a-4223-8081-195bf35111df\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Ticket Class</th>\n",
              "      <th>Purchase Type</th>\n",
              "      <th>Ticket Type</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>20</th>\n",
              "      <td>Standard</td>\n",
              "      <td>Station</td>\n",
              "      <td>Advance</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>26</th>\n",
              "      <td>First Class</td>\n",
              "      <td>Online</td>\n",
              "      <td>Advance</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>91</th>\n",
              "      <td>Standard</td>\n",
              "      <td>Online</td>\n",
              "      <td>Off-Peak</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>111</th>\n",
              "      <td>Standard</td>\n",
              "      <td>Station</td>\n",
              "      <td>Off-Peak</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>178</th>\n",
              "      <td>Standard</td>\n",
              "      <td>Online</td>\n",
              "      <td>Advance</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>31599</th>\n",
              "      <td>Standard</td>\n",
              "      <td>Station</td>\n",
              "      <td>Off-Peak</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>31604</th>\n",
              "      <td>Standard</td>\n",
              "      <td>Station</td>\n",
              "      <td>Off-Peak</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>31618</th>\n",
              "      <td>Standard</td>\n",
              "      <td>Station</td>\n",
              "      <td>Anytime</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>31637</th>\n",
              "      <td>Standard</td>\n",
              "      <td>Station</td>\n",
              "      <td>Anytime</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>31641</th>\n",
              "      <td>Standard</td>\n",
              "      <td>Station</td>\n",
              "      <td>Anytime</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>1118 rows × 3 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d79eed19-b35a-4223-8081-195bf35111df')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-d79eed19-b35a-4223-8081-195bf35111df button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-d79eed19-b35a-4223-8081-195bf35111df');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-e9e6ee41-d84e-40b6-8e39-7cd59903ffbc\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e9e6ee41-d84e-40b6-8e39-7cd59903ffbc')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-e9e6ee41-d84e-40b6-8e39-7cd59903ffbc button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "  <div id=\"id_ec9348c3-a6c0-4c57-8cbf-047a501b8e75\">\n",
              "    <style>\n",
              "      .colab-df-generate {\n",
              "        background-color: #E8F0FE;\n",
              "        border: none;\n",
              "        border-radius: 50%;\n",
              "        cursor: pointer;\n",
              "        display: none;\n",
              "        fill: #1967D2;\n",
              "        height: 32px;\n",
              "        padding: 0 0 0 0;\n",
              "        width: 32px;\n",
              "      }\n",
              "\n",
              "      .colab-df-generate:hover {\n",
              "        background-color: #E2EBFA;\n",
              "        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "        fill: #174EA6;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate {\n",
              "        background-color: #3B4455;\n",
              "        fill: #D2E3FC;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate:hover {\n",
              "        background-color: #434B5C;\n",
              "        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "        fill: #FFFFFF;\n",
              "      }\n",
              "    </style>\n",
              "    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('refunds')\"\n",
              "            title=\"Generate code using this dataframe.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "    <script>\n",
              "      (() => {\n",
              "      const buttonEl =\n",
              "        document.querySelector('#id_ec9348c3-a6c0-4c57-8cbf-047a501b8e75 button.colab-df-generate');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      buttonEl.onclick = () => {\n",
              "        google.colab.notebook.generateWithVariable('refunds');\n",
              "      }\n",
              "      })();\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "refunds",
              "summary": "{\n  \"name\": \"refunds\",\n  \"rows\": 1118,\n  \"fields\": [\n    {\n      \"column\": \"Ticket Class\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"First Class\",\n          \"Standard\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Purchase Type\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Online\",\n          \"Station\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Ticket Type\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Advance\",\n          \"Off-Peak\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 66
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "refund_counts = refunds.groupby(['Ticket Class', 'Ticket Type', 'Purchase Type']).size().reset_index(name='Count')\n",
        "refund_counts"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 426
        },
        "id": "9p6ebYrt-xzZ",
        "outputId": "29823d81-927e-4265-affd-346c4774a4fb"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   Ticket Class Ticket Type Purchase Type  Count\n",
              "0   First Class     Advance        Online     24\n",
              "1   First Class     Advance       Station     40\n",
              "2   First Class     Anytime        Online      6\n",
              "3   First Class     Anytime       Station     10\n",
              "4   First Class    Off-Peak        Online     10\n",
              "5   First Class    Off-Peak       Station     23\n",
              "6      Standard     Advance        Online    219\n",
              "7      Standard     Advance       Station    328\n",
              "8      Standard     Anytime        Online     42\n",
              "9      Standard     Anytime       Station     80\n",
              "10     Standard    Off-Peak        Online    108\n",
              "11     Standard    Off-Peak       Station    228"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-3c93d31d-cbf4-4e0a-a44a-d2167c8e8463\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Ticket Class</th>\n",
              "      <th>Ticket Type</th>\n",
              "      <th>Purchase Type</th>\n",
              "      <th>Count</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>First Class</td>\n",
              "      <td>Advance</td>\n",
              "      <td>Online</td>\n",
              "      <td>24</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>First Class</td>\n",
              "      <td>Advance</td>\n",
              "      <td>Station</td>\n",
              "      <td>40</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>First Class</td>\n",
              "      <td>Anytime</td>\n",
              "      <td>Online</td>\n",
              "      <td>6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>First Class</td>\n",
              "      <td>Anytime</td>\n",
              "      <td>Station</td>\n",
              "      <td>10</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>First Class</td>\n",
              "      <td>Off-Peak</td>\n",
              "      <td>Online</td>\n",
              "      <td>10</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>First Class</td>\n",
              "      <td>Off-Peak</td>\n",
              "      <td>Station</td>\n",
              "      <td>23</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>Standard</td>\n",
              "      <td>Advance</td>\n",
              "      <td>Online</td>\n",
              "      <td>219</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>Standard</td>\n",
              "      <td>Advance</td>\n",
              "      <td>Station</td>\n",
              "      <td>328</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>Standard</td>\n",
              "      <td>Anytime</td>\n",
              "      <td>Online</td>\n",
              "      <td>42</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>Standard</td>\n",
              "      <td>Anytime</td>\n",
              "      <td>Station</td>\n",
              "      <td>80</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>Standard</td>\n",
              "      <td>Off-Peak</td>\n",
              "      <td>Online</td>\n",
              "      <td>108</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>Standard</td>\n",
              "      <td>Off-Peak</td>\n",
              "      <td>Station</td>\n",
              "      <td>228</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3c93d31d-cbf4-4e0a-a44a-d2167c8e8463')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-3c93d31d-cbf4-4e0a-a44a-d2167c8e8463 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-3c93d31d-cbf4-4e0a-a44a-d2167c8e8463');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-7994f0ad-0889-4cfd-b467-4cea0c8ac359\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-7994f0ad-0889-4cfd-b467-4cea0c8ac359')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-7994f0ad-0889-4cfd-b467-4cea0c8ac359 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "  <div id=\"id_f4550831-1953-448b-88bd-d40300a1fe45\">\n",
              "    <style>\n",
              "      .colab-df-generate {\n",
              "        background-color: #E8F0FE;\n",
              "        border: none;\n",
              "        border-radius: 50%;\n",
              "        cursor: pointer;\n",
              "        display: none;\n",
              "        fill: #1967D2;\n",
              "        height: 32px;\n",
              "        padding: 0 0 0 0;\n",
              "        width: 32px;\n",
              "      }\n",
              "\n",
              "      .colab-df-generate:hover {\n",
              "        background-color: #E2EBFA;\n",
              "        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "        fill: #174EA6;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate {\n",
              "        background-color: #3B4455;\n",
              "        fill: #D2E3FC;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate:hover {\n",
              "        background-color: #434B5C;\n",
              "        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "        fill: #FFFFFF;\n",
              "      }\n",
              "    </style>\n",
              "    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('refund_counts')\"\n",
              "            title=\"Generate code using this dataframe.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "    <script>\n",
              "      (() => {\n",
              "      const buttonEl =\n",
              "        document.querySelector('#id_f4550831-1953-448b-88bd-d40300a1fe45 button.colab-df-generate');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      buttonEl.onclick = () => {\n",
              "        google.colab.notebook.generateWithVariable('refund_counts');\n",
              "      }\n",
              "      })();\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "refund_counts",
              "summary": "{\n  \"name\": \"refund_counts\",\n  \"rows\": 12,\n  \"fields\": [\n    {\n      \"column\": \"Ticket Class\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Standard\",\n          \"First Class\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Ticket Type\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Advance\",\n          \"Anytime\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Purchase Type\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Station\",\n          \"Online\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Count\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 107,\n        \"min\": 6,\n        \"max\": 328,\n        \"num_unique_values\": 11,\n        \"samples\": [\n          219,\n          24\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 34
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "g = sns.catplot(\n",
        "    data=refund_counts,\n",
        "    x='Ticket Class',\n",
        "    y='Count',\n",
        "    hue='Ticket Type',\n",
        "    col='Purchase Type',\n",
        "    kind='bar',\n",
        "    height=6,\n",
        "    aspect=1,\n",
        "    palette='muted'\n",
        ")\n",
        "\n",
        "g.set_axis_labels(\"Ticket Class\", \"Number of Refund Requests\")\n",
        "g.set_titles(\"Purchase Method: {col_name}\")\n",
        "g._legend.set_title(\"Ticket Type\")\n",
        "\n",
        "plt.subplots_adjust(top=0.8)\n",
        "g.fig.suptitle('Refund Requests by Ticket Class, Ticket Type, and Purchase Method')\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 609
        },
        "id": "31DeHIY4_IIe",
        "outputId": "eb0dc9dc-2a42-4422-948b-d22e0b556e4a"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1309.88x600 with 2 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# **7-Journey Status**"
      ],
      "metadata": {
        "id": "s_r9hs6SUOZM"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "status_counts = df[\"Journey Status\"].value_counts(normalize=True) * 100\n",
        "\n",
        "plt.figure(figsize=(6, 4))\n",
        "plt.pie(status_counts,\n",
        "        labels=status_counts.index,\n",
        "        autopct='%1.1f%%',\n",
        "        startangle=140,\n",
        "        colors=[\"#66b3ff\", \"#ff9999\", \"#99ff99\"])\n",
        "plt.title(\"Percentage Breakdown of Journey Outcomes\")\n",
        "plt.axis('equal')\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 367
        },
        "id": "c-_JaNu5Uhu6",
        "outputId": "bf8b9808-da49-43a1-f731-b6d1feedc604"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 600x400 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# **8-Customer Refund Request Count**"
      ],
      "metadata": {
        "id": "fPob0l9_UpWk"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "refunds_df = df[df[\"Refund Request\"] == \"Yes\"]\n",
        "refund_counts = refunds_df[\"Departure Station\"].value_counts().reset_index()\n",
        "refund_counts.columns = [\"Departure Station\", \"Refund Count\"]\n",
        "\n",
        "top_10_refunds = refund_counts.head(10)\n",
        "\n",
        "plt.figure(figsize=(14, 6))\n",
        "sns.barplot(data=top_10_refunds, y=\"Departure Station\", x=\"Refund Count\", palette=\"Reds_r\")\n",
        "plt.title(\"Top 10 Departure Stations by Refund Requests\", fontsize=14)\n",
        "plt.xlabel(\"Number of Refund Requests\")\n",
        "plt.ylabel(\"Departure Station\")\n",
        "plt.tight_layout()\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 694
        },
        "id": "LyqgN-pHU3U6",
        "outputId": "64374055-9977-4924-e787-4c8fb4b6636e"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-42-d252b743d926>:10: FutureWarning: \n",
            "\n",
            "Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `y` variable to `hue` and set `legend=False` for the same effect.\n",
            "\n",
            "  sns.barplot(data=top_10_refunds, y=\"Departure Station\", x=\"Refund Count\", palette=\"Reds_r\")\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1400x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# **9-Weekly Delay Duration**"
      ],
      "metadata": {
        "id": "y3h5iSgyVctf"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "df[\"Date of Journey\"] = pd.to_datetime(df[\"Date of Journey\"], format=\"%m/%d/%Y\", errors='coerce')\n",
        "df[\"Arrival Time\"] = pd.to_datetime(df[\"Arrival Time\"], format=\"%I:%M:%S %p\", errors='coerce')\n",
        "df[\"Actual Arrival Time\"] = pd.to_datetime(df[\"Actual Arrival Time\"], format=\"%I:%M:%S %p\", errors='coerce')\n",
        "\n",
        "# Calculate delay duration in minutes\n",
        "df[\"Delay (mins)\"] = (df[\"Actual Arrival Time\"] - df[\"Arrival Time\"]).dt.total_seconds() / 60\n",
        "df[\"Delay (mins)\"] = df[\"Delay (mins)\"].fillna(0)\n",
        "\n",
        "# Define week start (Monday)\n",
        "df[\"Week_Start\"] = df[\"Date of Journey\"] - pd.to_timedelta(df[\"Date of Journey\"].dt.dayofweek, unit='d')\n",
        "\n",
        "# Get top 10 stations with highest total delay\n",
        "top_stations = df.groupby(\"Departure Station\")[\"Delay (mins)\"].sum().nlargest(10).index\n",
        "\n",
        "# Filter data to include only top 10 stations\n",
        "df_top = df[df[\"Departure Station\"].isin(top_stations)]\n",
        "\n",
        "# Aggregate delay by week and station\n",
        "weekly_delay = df_top.groupby([\"Week_Start\", \"Departure Station\"])[\"Delay (mins)\"].sum().reset_index()\n",
        "\n",
        "# Pivot for line chart\n",
        "pivot_delay = weekly_delay.pivot(index=\"Week_Start\", columns=\"Departure Station\", values=\"Delay (mins)\")\n",
        "\n",
        "# Plot the trend as line chart\n",
        "pivot_delay.plot(kind=\"line\", figsize=(14, 7), marker='o')\n",
        "plt.title(\"Weekly Delay Duration Trend - Top 10 Departure Stations\", fontsize=15)\n",
        "plt.xlabel(\"Week Start\")\n",
        "plt.ylabel(\"Total Delay (Minutes)\")\n",
        "plt.legend(title=\"Departure Station\", bbox_to_anchor=(1.05, 1), loc='upper left')\n",
        "plt.grid(True)\n",
        "plt.tight_layout()\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 707
        },
        "id": "FOkOJZdgcRwc",
        "outputId": "0ea7f4fe-4ea5-462c-d71a-fc196a0404cc"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1400x700 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# **railcard**"
      ],
      "metadata": {
        "id": "2yboP68KKbb2"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "\n",
        "# حساب متوسط السعر لكل نوع Railcard (بما فيهم None)\n",
        "railcard_avg = df.groupby(\"Railcard\")[\"Price\"].mean().reset_index()\n",
        "\n",
        "# ترتيب الاختيارات (اختياري لو عايز شكل ثابت)\n",
        "order = [\"None\", \"Adult\", \"Disabled\", \"Senior\"]\n",
        "\n",
        "# رسم البار تشارت\n",
        "plt.figure(figsize=(10, 6))\n",
        "barplot = sns.barplot(data=railcard_avg, x=\"Railcard\", y=\"Price\", palette=\"Set2\", order=order)\n",
        "\n",
        "# إضافة القيم فوق كل عمود\n",
        "for p in barplot.patches:\n",
        "    barplot.annotate(f\"{p.get_height():.1f}\", (p.get_x() + p.get_width() / 2., p.get_height()),\n",
        "                     ha='center', va='bottom', fontsize=10, color='black')\n",
        "\n",
        "# تنسيق الشكل\n",
        "plt.title(\"Average Ticket Price by Railcard Type\", fontsize=14)\n",
        "plt.xlabel(\"Railcard Type\")\n",
        "plt.ylabel(\"Average Ticket Price\")\n",
        "plt.tight_layout()\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 694
        },
        "id": "y-wv8QLwKf1V",
        "outputId": "5de7d21f-39be-4df0-815b-125900971dc8"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-67-d257caa22bbf>:9: FutureWarning: \n",
            "\n",
            "Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect.\n",
            "\n",
            "  barplot = sns.barplot(data=railcard_avg, x=\"Railcard\", y=\"Price\", palette=\"Set2\", order=order)\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x600 with 1 Axes>"
            ],
            "image/png": "iVBORw0KGgoAAAANSUhEUgAAA90AAAJOCAYAAACqS2TfAAAAOnRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjEwLjAsIGh0dHBzOi8vbWF0cGxvdGxpYi5vcmcvlHJYcgAAAAlwSFlzAAAPYQAAD2EBqD+naQAAZTJJREFUeJzt3Xd8Tvf///HnlYQMkigSEUWsGrX3ql1BqfWxfawY1VpVlH7stpTWaMsXtaKo0ZZQSqtae32MWLX3SOyIUEFyfn/0l+vjaoZcXEcSHvfb7dxuzvu8z/u8zpEryTNnWQzDMAQAAAAAABzOKaULAAAAAADgRUXoBgAAAADAJIRuAAAAAABMQugGAAAAAMAkhG4AAAAAAExC6AYAAAAAwCSEbgAAAAAATELoBgAAAADAJIRuAAAAAABMQugGALzQgoODZbFYFBwc/FTrb9iwQRaLRSNHjnRoXanFsx4fR7JYLKpRo0ZKl2GKGjVqyGKx2LSlpa+t1PR1AgBpDaEbAJ6TLl26yGKxKEuWLIqOjk7pctKkTp06yWKxJHtK7QEhoSBmz3pxk5OTk1555RW98cYbCg4OlmEYJlT74kroeGbKlElVqlTRjBkzFBsbm9Ilphkv2mcUABzBJaULAICXwZ07d7R06VJZLBbdvHlTISEhatWqVUqXleY0adJEAQEBNm0bNmzQxo0b1bhxY5UsWdJmWcmSJZUnTx5VrFhR2bNnf36FPicffPCBMmbMqJiYGJ0+fVrLli3Tli1btGfPHn399dfJGqNp06Yv7PGx1+PH89y5c1q2bJneeecd7d27VzNmzHimsb/99lvdu3fPQZWmXk/zGQWAFx2hGwCegyVLluju3bvq37+/Jk+erNmzZxO6n0KTJk3UpEkTm7aRI0dq48aNatKkiTp16pTget7e3uYXlwIGDBggPz8/6/zBgwdVoUIFTZ06Vf3791eePHmeOIa3t/cLe3zs9c/jOXz4cJUsWVIzZ87Uhx9+qLx58z712Lly5XJEiane035GAeBFxuXlAPAczJ49Wy4uLho0aJBq1qyp9evX69y5c9bl9+7dk6enp/Lly5foGMWLF5e7u7siIyOtbYZhaM6cOapSpYq8vLzk4eGhsmXLas6cOfHWHzlypCwWizZs2KDg4GCVLl1aHh4e1ntob9++rXHjxql69ery9/dX+vTp5e/vrw4dOujUqVMJ1nT9+nV1795dvr6+8vDwULly5bR8+fIk7/88cOCAWrdurezZsyt9+vTKnTu3evfurRs3biTzaNonqVpOnz6t7t27K0+ePHJ1dZWvr69q1KiRrEteb9++rerVq8vJycnmrPKdO3c0YsQIvf7663J3d1emTJkUGBioLVu22KxvsVi0ceNG67/jpmcJJcWKFVP16tVlGIZ2794t6X+X+54+fVoTJkxQkSJF5Orqat2Oo47Ppk2b1KhRI2XNmlWurq4qUKCAhg4d+lRndy9evKg2bdooa9as8vDwUJUqVfTbb7/Z9Gnfvr0sFot27dqV4BjDhw+XxWLRokWL7N5+nPz581uP5969e22W7dmzR7169VLRokXl7e0td3d3FStWTJ999pkePnwYbyx7byW4evWqPvjgAxUsWFDu7u7KnDmzKlSooC+++MKm35w5c9S4cWMFBATIzc1NmTNnVmBgoP744494Yz5+D/m2bdtUt25dZcqUyaaumzdv6p133lG2bNlsPtOOFBsbq9y5cyd5q021atXk4uKiixcvSrL9Ol2xYoXKly8vDw8P+fj4qEuXLrpy5UqC45w5c0Zdu3ZVrly55OrqquzZs6tTp042338BwGyEbgAw2Z9//qkdO3aobt26ypYtmzp06KDY2FjNnTvX2sfDw0PNmzfX6dOntW3btnhj7N+/XwcPHlTjxo3l5eUl6e/A3a5dOwUFBenatWtq27atunbtqrt37yooKEgDBgxIsJ7PP/9c7777rgoWLKg+ffqoSpUqkqQjR45o+PDhcnd3V9OmTdWvXz+VLVtW3333ncqXLx/vl9SoqChVr15dM2fOVIECBdS3b18VKlRIrVu31rJlyxLc9sqVK1W+fHmtXLlSNWrUUL9+/VSsWDFNmTJFlSpV0q1bt57qGD+NLVu2qFSpUpo1a5YKFSqk/v37q1mzZvrrr7/05ZdfJrluWFiYqlWrph07dmjRokXq3bu3pL8DS6VKlTR69Gi98soreuedd9S8eXPt2bNHNWvWVEhIiHWMESNGKHfu3NZ/x03/PEv4tP4Z8Hr37q0xY8aobNmy1uOeFHuOz7Rp01SjRg1t3bpVb731lvr06aNXX31Vn376qd588009ePAg2XXfunVLVapU0YkTJ9S1a1e1adNG+/fvV7169WyOX48ePSRJs2bNijdGTEyM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ChcuHC9wh4WFxXvKr5eXlwICAnTy5MkEf0lP6AnsFSpUkCRt377dIfU+i7hLrf95CXxSnJycNHPmTHXr1k1Lly5Vu3btbC6/L1eunCwWi137FxfWYmJikr3O82DP8Yn7f427nPdZnT9/PsHXOW3evFmSVKpUKZv2ihUrqnjx4lqwYIF+/fVXnThxQu3atbMG5GdRqFAhvffee7p8+bImT55sbY+7PeKtt96yCdyP1/m07Dn2cXXEXRUTxzCMJK+2SIiXl5fy5MmjkydPKjw8PN7yZ92vxHTu3Fnp0qXTrFmzNGfOHMXGxiZ5lUJCdURFRSk0NFReXl7WsJ6avt8AAKEbAExgGIbmzp0ri8WiefPmadasWfGm4OBgVapUSQcOHLA5W922bVs5Oztr/vz5mj9/viwWS7zQLUl9+vTRvXv31K1btwQvkTxz5ozOnj2b7Jpz586tkydP2pxJun//vnr27Jnge4fbtWunBw8eaMSIETbtGzZs0C+//BKvf+fOneXp6an//Oc/Onz4cLzl9+7dc1hwe5K3335br776qhYsWJBgrYmdZbRYLJoxY4Z69OihpUuXqk2bNtbg7efnp5YtW2rbtm36/PPPbe7vjbNz506b91bH3VZw4cIFR+yWw9hzfN599125uLiod+/eOn/+fLy+ERER2rdvX7K3HRMTo48++sjm+B04cEDz58+Xj4+PGjRoEG+dHj166ObNm+rcubMkPdWl5YkZPHiw3N3d9cUXX1gvwY67R/qf714/fPiwxo4d+0zbK1eunMqVK6dNmzZp5syZ8ZY/fuwTq+Ozzz7ToUOH7N72v//9bz148EDDhw+3af/1118dfj93nGzZsqlJkyZau3atpk2bpqxZsyb52rzffvst3tfkp59+qoiICHXo0EFOTn//atu4cWPlypVLEydO1KZNm+KN8/Dhw3jHDQDMwuXlAGCC33//XWfOnFH16tUTvUxS+juIbt++XbNnz7Y+zMfPz0916tTRr7/+KicnJ1WtWlUBAQHx1u3Ro4d27NihefPmaevWrapTp478/f115coVHT16VDt37tR3332X4LoJ6d27t3r37q1SpUrpX//6lx49eqR169bJMAyVKFFC+/fvt+n/4Ycf6scff9T06dN16NAhvfHGG7p48aKWLl2qRo0a6aeffrL+AixJPj4+WrRokVq0aKESJUqo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xWJRTEyM46oDAAAAACANszt0//HHH2bUkaiAgACdO3cuXvu7776rqVOnxmsPDg5W586dbdpcXV11//5902oEAAAAACAhdofu6tWrm1FHov773//anD0/dOiQ3nzzTbVo0SLRdby8vHTs2DHr/ONn5AEAAAAAeF7svqdbkjZv3qz27durcuXKunTpkiRp/vz52rJli0OLkyQfHx/5+flZp1WrVilfvnxJhn+LxWKzTrZs2RxeFwAAAAAAT2J36P7xxx8VGBgod3d37d27V9HR0ZKk27dva8yYMQ4v8HEPHjzQggUL1KVLlyTPXkdFRSl37tzKmTOnGjdurMOHD5taFwAAAAAACXmqp5dPnz5dM2fOVLp06aztVapU0d69ex1a3D+FhIQoIiJCnTp1SrRPwYIFNWfOHK1YsUILFixQbGysKleurIsXLya6TnR0NE9hBwAAAAA4nN2h+9ixY6pWrVq8dm9vb0VERDiipkTNnj1b9evXl7+/f6J9KlWqpA4dOqhkyZKqXr26li1bJh8fH82YMSPRdcaOHStvb2/rlDNnTjPKBwAAAAC8ZOwO3X5+fjp58mS89i1btihv3rwOKSoh586d02+//aauXbvatV66dOlUqlSpBGuOM2TIEN2+fds6Xbhw4VnLBQAAAADA/tDdrVs39e3bVzt37pTFYtHly5e1cOFCDRgwQD179jSjRknS3Llz5evrq7feesuu9WJiYnTw4EFlz5490T6urq7y8vKymQAAAAAAeFZ2vzJs8ODBio2NVe3atXXv3j1Vq1ZNrq6uGjBggHr37m1GjYqNjdXcuXPVsWNHubjYltyhQwflyJFDY8eOlSSNHj1aFStWVP78+RUREaHPP/9c586ds/sMOQAAAAAAz8ru0G2xWPSf//xHAwcO1MmTJxUVFaUiRYooY8aMZtQnSfrtt990/vx5denSJd6y8+fPy8npfyfsb926pW7duik8PFyvvPKKypQpo23btqlIkSKm1QcAAAAAQELsDt0LFixQs2bN5OHh8dyCbN26dWUYRoLLNmzYYDM/adIkTZo06TlUBQAAAABA0uy+p/v999+Xr6+v2rZtq59//lkxMTFm1AUAAAAAQJpnd+gOCwvT4sWLZbFY1LJlS2XPnl3vvfeetm3bZkZ9AAAAAACkWXaHbhcXFzVs2FALFy7U1atXNWnSJJ09e1Y1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AAAmIXQDAJCG1ahRQ/369bPOBwQEaPLkyc+9jg0bNshisSgiIuK5bxsAgNSM0A0AQAro1KmTLBaLLBaL0qVLpzx58mjQoEG6f/++XeMsW7ZMH3/8sUlVOkZcIE9q2rBhQ0qXCQCAKVxSugAAAF5W9erV09y5c/Xw4UPt2bNHHTt2lMVi0bhx45I9RubMmU2sML4HDx4offr0dq1TuXJlhYWFWef79u2ryMhIzZ0719r2vPcDAIDnhTPdAACkEFdXV/n5+Slnzpxq0qSJ6tSpo3Xr1lmX37hxQ23atFGOHDnk4eGhYsWKadGiRTZj/PPy8n+KiIhQjx49lC1bNrm5ualo0aJatWqVXeP36tVL/fr1U9asWRUYGChJ+vnnn/Xaa6/J3d1dNWvW1NmzZxOtIX369PLz87NO7u7u1n0/fvy4cubMqZs3b9qs069fP73xxhuSpODgYGXKlEkhISEqUKCA3NzcFBgYqAsXLtiss2LFCpUuXVpubm7KmzevRo0apUePHiVaFwAAzwOhGwCAVODQoUPatm2bzVnk+/fvq0yZMlq9erUOHTqk7t2769///rd27dqVrDFjY2NVv359bd26VQsWLNCff/6pzz77TM7OznaNP2/ePKVPn15bt27V9OnTdeHCBTVr1kyNGjVSaGiounbtqsGDBz/VflerVk158+bV/PnzrW0PHz7UwoUL1aVLF2vbvXv39Omnn+rbb7/V1q1bFRERodatW1uXb968WR06dFDfvn31559/asaMGQoODtann376VHUBAOAoXF4OAEAKWbVqlTJmzKhHjx4pOjpaTk5OmjJlinV5jhw5NGDAAOt879699csvv2jp0qUqX778E8f/7bfftGvXLh05ckSvvfaaJClv3rx2j1+gQAGNHz/eOv/RRx8pX758mjBhgiSpYMGCOnjwoF2XxT8uKChIc+fO1cCBAyVJP/30k+7fv6+WLVta+zx8+FBTpkxRhQoVJP39h4DChQtr165dKl++vEaNGqXBgwerY8eO1v38+OOPNWjQII0YMeKp6gIAwBEI3QAApJCaNWtq2rRpunv3riZNmiQXFxc1b97cujwmJkZjxozR0qVLdenSJT148EDR0dHy8PBI1vihoaF69dVXrYH7n5I7fpkyZWzmjxw5Yg2/cSpVqpSsmhLSqVMnDR06VDt27FDFihUVHBysli1bKkOGDNY+Li4uKleunHW+UKFCypQpk44cOaLy5ctr//792rp1q82Z7ZiYGN2/f1/37t1L9jEDAMDRCN0AAKSQDBkyKH/+/JKkOXPmqESJEpo9e7aCgoIkSZ9//rm+/PJLTZ48WcWKFVOGDBnUr18/PXjwIFnju7u7J7k8ueM/Hn7N4Ovrq0aNGmnu3LnKkyeP1qxZY/fTzKOiojRq1Cg1a9Ys3jI3NzcHVQoAgP0I3QAApAJOTk766KOP1L9/f7Vt21bu7u7aunWrGjdurPbt20v6+x7t48ePq0iRIskas3jx4rp48aKOHz+e4Nnupx2/cOHCWrlypU3bjh07klVTYrp27ao2bdro1VdfVb58+VSlShWb5Y8ePdLu3butl70fO3ZMERERKly4sCSpdOnSOnbsmPWPGAAApBY8SA0AgFSiRYsWcnZ21tSpUyX9fS/1unXrtG3bNh05ckQ9evTQlStXkj1e9erVVa1aNTVv3lzr1q3TmTNntGbNGq1du/aZxn/nnXd04sQJDRw4UMeOHdN3332n4ODgp9rnOIGBgfLy8tInn3yizp07x1ueLl069e7dWzt37tSePXvUqVMnVaxY0RrChw8frm+//VajRo3S4cOHdeTIES1evFhDhw59proAAHhWhG4AAFIJFxcX9erVS+PHj9fdu3c1dOhQlS5dWoGBgapRo4b8/PzUpEkTu8b88ccfVa5cObVp00ZFihTRoEGDFBMTI0lPPX6uXLn0448/KiQkRCVKlND06dM1ZsyYp9jj/3FyclKnTp0UExOjDh06xFvu4eGhDz/8UG3btlWVKlWUMWNGLVmyxLo8MDBQq1at0q+//qpy5cqpYsWKmjRpknLnzv1MdQEA8KwshmEYKV0EAABAUFCQrl27Fu/S9eDgYPXr108REREpUxgAAM+Ae7oBAECKun37tg4ePKjvvvsuXuAGACCtI3QDAIAU1bhxY+3atUvvvPOO3nzzzZQuBwAAh+LycgAAAAAATMKD1AAAAAAAMAmhGwAAAAAAkxC6AQAAAAAwCaEbAAAAAACTELoBAAAAADAJoRsAAAAAAJMQugEAAAAAMAmhGwAAAAAAkxC6AQAAAAAwyf8Dp+CGgKLcFxAAAAAASUVORK5CYII=\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "**Cleaning Code **"
      ],
      "metadata": {
        "id": "VHeYPiqfPrd_"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import os\n",
        "import pandas as pd\n",
        "from google.colab import files\n",
        "import shutil\n",
        "\n",
        "# Step 1: Upload the dataset manually in Colab\n",
        "print(\"📤 Please upload the railway.csv file:\")\n",
        "uploaded = files.upload()\n",
        "\n",
        "# Step 2: Get the correct filename dynamically\n",
        "uploaded_filename = list(uploaded.keys())[0]\n",
        "\n",
        "# Step 3: Define destination path\n",
        "destination_path = \"/content/railway_cleaned.csv\"\n",
        "\n",
        "# Step 4: Move the uploaded file to the correct path\n",
        "shutil.move(uploaded_filename, destination_path)\n",
        "print(f\"✅ File moved successfully: {destination_path}\")\n",
        "\n",
        "# Step 5: Load the dataset\n",
        "if os.path.exists(destination_path):\n",
        "    railway_df = pd.read_csv(destination_path)\n",
        "    print(\"✅ File loaded successfully!\")\n",
        "else:\n",
        "    raise FileNotFoundError(f\"❌ File not found: {destination_path}\")\n",
        "\n",
        "# Step 6: Data Cleaning\n",
        "# 1️⃣ Standardize column names (remove spaces, lowercase format)\n",
        "railway_df.columns = railway_df.columns.str.strip().str.lower().str.replace(\" \", \"_\")\n",
        "\n",
        "# 2️⃣ Drop duplicate rows\n",
        "railway_df.drop_duplicates(inplace=True)\n",
        "\n",
        "# 3️⃣ Handle missing values\n",
        "# Fill missing text values with \"Unknown\" and missing numeric values with 0\n",
        "for col in railway_df.columns:\n",
        "    if railway_df[col].dtype == \"object\":\n",
        "        railway_df[col].fillna(\"Unknown\", inplace=True)\n",
        "    else:\n",
        "        railway_df[col].fillna(0, inplace=True)\n",
        "\n",
        "# Step 7: Save and Download the Cleaned File\n",
        "cleaned_data_path = \"/content/railway_cleaned.csv\"\n",
        "railway_df.to_csv(cleaned_data_path, index=False)\n",
        "\n",
        "print(f\"✅ Cleaned data saved to {cleaned_data_path}\")\n",
        "\n",
        "# Step 8: Provide a Download Link\n",
        "print(\"📥 Click the link below to download the cleaned file:\")\n",
        "print(f\"[Download Cleaned Data](railway_cleaned.csv)\")\n",
        "\n",
        "# Automatically trigger the download\n",
        "files.download(cleaned_data_path)\n"
      ],
      "metadata": {
        "id": "xuudNm4QPvY8",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 420
        },
        "outputId": "810c78de-d1d4-4772-eb50-82e25ad295ec"
      },
      "execution_count": 1,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "📤 Please upload the railway.csv file:\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "     <input type=\"file\" id=\"files-7148c793-d92e-492c-8866-af36aa4a208b\" name=\"files[]\" multiple disabled\n",
              "        style=\"border:none\" />\n",
              "     <output id=\"result-7148c793-d92e-492c-8866-af36aa4a208b\">\n",
              "      Upload widget is only available when the cell has been executed in the\n",
              "      current browser session. Please rerun this cell to enable.\n",
              "      </output>\n",
              "      <script>// Copyright 2017 Google LLC\n",
              "//\n",
              "// Licensed under the Apache License, Version 2.0 (the \"License\");\n",
              "// you may not use this file except in compliance with the License.\n",
              "// You may obtain a copy of the License at\n",
              "//\n",
              "//      http://www.apache.org/licenses/LICENSE-2.0\n",
              "//\n",
              "// Unless required by applicable law or agreed to in writing, software\n",
              "// distributed under the License is distributed on an \"AS IS\" BASIS,\n",
              "// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n",
              "// See the License for the specific language governing permissions and\n",
              "// limitations under the License.\n",
              "\n",
              "/**\n",
              " * @fileoverview Helpers for google.colab Python module.\n",
              " */\n",
              "(function(scope) {\n",
              "function span(text, styleAttributes = {}) {\n",
              "  const element = document.createElement('span');\n",
              "  element.textContent = text;\n",
              "  for (const key of Object.keys(styleAttributes)) {\n",
              "    element.style[key] = styleAttributes[key];\n",
              "  }\n",
              "  return element;\n",
              "}\n",
              "\n",
              "// Max number of bytes which will be uploaded at a time.\n",
              "const MAX_PAYLOAD_SIZE = 100 * 1024;\n",
              "\n",
              "function _uploadFiles(inputId, outputId) {\n",
              "  const steps = uploadFilesStep(inputId, outputId);\n",
              "  const outputElement = document.getElementById(outputId);\n",
              "  // Cache steps on the outputElement to make it available for the next call\n",
              "  // to uploadFilesContinue from Python.\n",
              "  outputElement.steps = steps;\n",
              "\n",
              "  return _uploadFilesContinue(outputId);\n",
              "}\n",
              "\n",
              "// This is roughly an async generator (not supported in the browser yet),\n",
              "// where there are multiple asynchronous steps and the Python side is going\n",
              "// to poll for completion of each step.\n",
              "// This uses a Promise to block the python side on completion of each step,\n",
              "// then passes the result of the previous step as the input to the next step.\n",
              "function _uploadFilesContinue(outputId) {\n",
              "  const outputElement = document.getElementById(outputId);\n",
              "  const steps = outputElement.steps;\n",
              "\n",
              "  const next = steps.next(outputElement.lastPromiseValue);\n",
              "  return Promise.resolve(next.value.promise).then((value) => {\n",
              "    // Cache the last promise value to make it available to the next\n",
              "    // step of the generator.\n",
              "    outputElement.lastPromiseValue = value;\n",
              "    return next.value.response;\n",
              "  });\n",
              "}\n",
              "\n",
              "/**\n",
              " * Generator function which is called between each async step of the upload\n",
              " * process.\n",
              " * @param {string} inputId Element ID of the input file picker element.\n",
              " * @param {string} outputId Element ID of the output display.\n",
              " * @return {!Iterable<!Object>} Iterable of next steps.\n",
              " */\n",
              "function* uploadFilesStep(inputId, outputId) {\n",
              "  const inputElement = document.getElementById(inputId);\n",
              "  inputElement.disabled = false;\n",
              "\n",
              "  const outputElement = document.getElementById(outputId);\n",
              "  outputElement.innerHTML = '';\n",
              "\n",
              "  const pickedPromise = new Promise((resolve) => {\n",
              "    inputElement.addEventListener('change', (e) => {\n",
              "      resolve(e.target.files);\n",
              "    });\n",
              "  });\n",
              "\n",
              "  const cancel = document.createElement('button');\n",
              "  inputElement.parentElement.appendChild(cancel);\n",
              "  cancel.textContent = 'Cancel upload';\n",
              "  const cancelPromise = new Promise((resolve) => {\n",
              "    cancel.onclick = () => {\n",
              "      resolve(null);\n",
              "    };\n",
              "  });\n",
              "\n",
              "  // Wait for the user to pick the files.\n",
              "  const files = yield {\n",
              "    promise: Promise.race([pickedPromise, cancelPromise]),\n",
              "    response: {\n",
              "      action: 'starting',\n",
              "    }\n",
              "  };\n",
              "\n",
              "  cancel.remove();\n",
              "\n",
              "  // Disable the input element since further picks are not allowed.\n",
              "  inputElement.disabled = true;\n",
              "\n",
              "  if (!files) {\n",
              "    return {\n",
              "      response: {\n",
              "        action: 'complete',\n",
              "      }\n",
              "    };\n",
              "  }\n",
              "\n",
              "  for (const file of files) {\n",
              "    const li = document.createElement('li');\n",
              "    li.append(span(file.name, {fontWeight: 'bold'}));\n",
              "    li.append(span(\n",
              "        `(${file.type || 'n/a'}) - ${file.size} bytes, ` +\n",
              "        `last modified: ${\n",
              "            file.lastModifiedDate ? file.lastModifiedDate.toLocaleDateString() :\n",
              "                                    'n/a'} - `));\n",
              "    const percent = span('0% done');\n",
              "    li.appendChild(percent);\n",
              "\n",
              "    outputElement.appendChild(li);\n",
              "\n",
              "    const fileDataPromise = new Promise((resolve) => {\n",
              "      const reader = new FileReader();\n",
              "      reader.onload = (e) => {\n",
              "        resolve(e.target.result);\n",
              "      };\n",
              "      reader.readAsArrayBuffer(file);\n",
              "    });\n",
              "    // Wait for the data to be ready.\n",
              "    let fileData = yield {\n",
              "      promise: fileDataPromise,\n",
              "      response: {\n",
              "        action: 'continue',\n",
              "      }\n",
              "    };\n",
              "\n",
              "    // Use a chunked sending to avoid message size limits. See b/62115660.\n",
              "    let position = 0;\n",
              "    do {\n",
              "      const length = Math.min(fileData.byteLength - position, MAX_PAYLOAD_SIZE);\n",
              "      const chunk = new Uint8Array(fileData, position, length);\n",
              "      position += length;\n",
              "\n",
              "      const base64 = btoa(String.fromCharCode.apply(null, chunk));\n",
              "      yield {\n",
              "        response: {\n",
              "          action: 'append',\n",
              "          file: file.name,\n",
              "          data: base64,\n",
              "        },\n",
              "      };\n",
              "\n",
              "      let percentDone = fileData.byteLength === 0 ?\n",
              "          100 :\n",
              "          Math.round((position / fileData.byteLength) * 100);\n",
              "      percent.textContent = `${percentDone}% done`;\n",
              "\n",
              "    } while (position < fileData.byteLength);\n",
              "  }\n",
              "\n",
              "  // All done.\n",
              "  yield {\n",
              "    response: {\n",
              "      action: 'complete',\n",
              "    }\n",
              "  };\n",
              "}\n",
              "\n",
              "scope.google = scope.google || {};\n",
              "scope.google.colab = scope.google.colab || {};\n",
              "scope.google.colab._files = {\n",
              "  _uploadFiles,\n",
              "  _uploadFilesContinue,\n",
              "};\n",
              "})(self);\n",
              "</script> "
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Saving Power query cleaned.csv to Power query cleaned.csv\n",
            "✅ File moved successfully: /content/railway_cleaned.csv\n",
            "✅ File loaded successfully!\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-1-4d512c9fdce1>:38: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.\n",
            "The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.\n",
            "\n",
            "For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.\n",
            "\n",
            "\n",
            "  railway_df[col].fillna(\"Unknown\", inplace=True)\n",
            "<ipython-input-1-4d512c9fdce1>:40: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.\n",
            "The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.\n",
            "\n",
            "For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.\n",
            "\n",
            "\n",
            "  railway_df[col].fillna(0, inplace=True)\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "✅ Cleaned data saved to /content/railway_cleaned.csv\n",
            "📥 Click the link below to download the cleaned file:\n",
            "[Download Cleaned Data](railway_cleaned.csv)\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.Javascript object>"
            ],
            "application/javascript": [
              "\n",
              "    async function download(id, filename, size) {\n",
              "      if (!google.colab.kernel.accessAllowed) {\n",
              "        return;\n",
              "      }\n",
              "      const div = document.createElement('div');\n",
              "      const label = document.createElement('label');\n",
              "      label.textContent = `Downloading \"${filename}\": `;\n",
              "      div.appendChild(label);\n",
              "      const progress = document.createElement('progress');\n",
              "      progress.max = size;\n",
              "      div.appendChild(progress);\n",
              "      document.body.appendChild(div);\n",
              "\n",
              "      const buffers = [];\n",
              "      let downloaded = 0;\n",
              "\n",
              "      const channel = await google.colab.kernel.comms.open(id);\n",
              "      // Send a message to notify the kernel that we're ready.\n",
              "      channel.send({})\n",
              "\n",
              "      for await (const message of channel.messages) {\n",
              "        // Send a message to notify the kernel that we're ready.\n",
              "        channel.send({})\n",
              "        if (message.buffers) {\n",
              "          for (const buffer of message.buffers) {\n",
              "            buffers.push(buffer);\n",
              "            downloaded += buffer.byteLength;\n",
              "            progress.value = downloaded;\n",
              "          }\n",
              "        }\n",
              "      }\n",
              "      const blob = new Blob(buffers, {type: 'application/binary'});\n",
              "      const a = document.createElement('a');\n",
              "      a.href = window.URL.createObjectURL(blob);\n",
              "      a.download = filename;\n",
              "      div.appendChild(a);\n",
              "      a.click();\n",
              "      div.remove();\n",
              "    }\n",
              "  "
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.Javascript object>"
            ],
            "application/javascript": [
              "download(\"download_e273bb92-41d2-4085-9d8c-d56afae24861\", \"railway_cleaned.csv\", 6613638)"
            ]
          },
          "metadata": {}
        }
      ]
    }
  ]
}